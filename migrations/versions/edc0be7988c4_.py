"""empty message

Revision ID: edc0be7988c4
Revises: 
Create Date: 2018-10-04 07:55:34.192737

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'edc0be7988c4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('LogRule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('sourceregex', sa.Boolean(), nullable=True),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('contentregex', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Object',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('subtype', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('OpenNmsServer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rest_query', sa.String(), nullable=True),
    sa.Column('device_query', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('default_longitude', sa.Float(), nullable=True),
    sa.Column('default_latitude', sa.Float(), nullable=True),
    sa.Column('default_zoom_level', sa.Integer(), nullable=True),
    sa.Column('gotty_start_port', sa.Integer(), nullable=True),
    sa.Column('gotty_end_port', sa.Integer(), nullable=True),
    sa.Column('gotty_port_index', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Pool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('device_name', sa.String(), nullable=True),
    sa.Column('device_name_regex', sa.Boolean(), nullable=True),
    sa.Column('device_description', sa.String(), nullable=True),
    sa.Column('device_description_regex', sa.Boolean(), nullable=True),
    sa.Column('device_model', sa.String(), nullable=True),
    sa.Column('device_model_regex', sa.Boolean(), nullable=True),
    sa.Column('device_location', sa.String(), nullable=True),
    sa.Column('device_location_regex', sa.Boolean(), nullable=True),
    sa.Column('device_subtype', sa.String(), nullable=True),
    sa.Column('device_subtype_regex', sa.Boolean(), nullable=True),
    sa.Column('device_vendor', sa.String(), nullable=True),
    sa.Column('device_vendor_regex', sa.Boolean(), nullable=True),
    sa.Column('device_operating_system', sa.String(), nullable=True),
    sa.Column('device_operating_system_regex', sa.Boolean(), nullable=True),
    sa.Column('device_os_version', sa.String(), nullable=True),
    sa.Column('device_os_version_regex', sa.Boolean(), nullable=True),
    sa.Column('device_ip_address', sa.String(), nullable=True),
    sa.Column('device_ip_address_regex', sa.Boolean(), nullable=True),
    sa.Column('device_longitude', sa.String(), nullable=True),
    sa.Column('device_longitude_regex', sa.Boolean(), nullable=True),
    sa.Column('device_latitude', sa.String(), nullable=True),
    sa.Column('device_latitude_regex', sa.Boolean(), nullable=True),
    sa.Column('link_name', sa.String(), nullable=True),
    sa.Column('link_name_regex', sa.Boolean(), nullable=True),
    sa.Column('link_description', sa.String(), nullable=True),
    sa.Column('link_description_regex', sa.Boolean(), nullable=True),
    sa.Column('link_model', sa.String(), nullable=True),
    sa.Column('link_model_regex', sa.Boolean(), nullable=True),
    sa.Column('link_location', sa.String(), nullable=True),
    sa.Column('link_location_regex', sa.Boolean(), nullable=True),
    sa.Column('link_subtype', sa.String(), nullable=True),
    sa.Column('link_subtype_regex', sa.Boolean(), nullable=True),
    sa.Column('link_vendor', sa.String(), nullable=True),
    sa.Column('link_vendor_regex', sa.Boolean(), nullable=True),
    sa.Column('link_source', sa.String(), nullable=True),
    sa.Column('link_source_regex', sa.Boolean(), nullable=True),
    sa.Column('link_destination', sa.String(), nullable=True),
    sa.Column('link_destination_regex', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('SyslogServer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address')
    )
    op.create_table('TacacsServer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip_address', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=120), nullable=True),
    sa.Column('port', sa.Integer(), nullable=True),
    sa.Column('timeout', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ip_address'),
    sa.UniqueConstraint('password')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('permissions', sa.PickleType(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Device',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('os_version', sa.String(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('enable_password', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Object.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Service',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['Job.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('creation_time', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('logs', sa.PickleType(), nullable=True),
    sa.Column('frequency', sa.String(), nullable=True),
    sa.Column('start_date', sa.String(), nullable=True),
    sa.Column('end_date', sa.String(), nullable=True),
    sa.Column('positions', sa.PickleType(), nullable=True),
    sa.Column('waiting_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Workflow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(), nullable=True),
    sa.Column('operating_system', sa.String(), nullable=True),
    sa.Column('start_task', sa.Integer(), nullable=True),
    sa.Column('end_task', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Job.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('destination_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['Device.id'], ),
    sa.ForeignKeyConstraint(['id'], ['Object.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['Device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ServiceTask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Task.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['Service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('WorkflowEdge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.Boolean(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('destination_id', sa.Integer(), nullable=True),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['destination_id'], ['Task.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['Task.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['Workflow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('WorkflowTask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['Task.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['Workflow.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pool_device_association',
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['Device.id'], ),
    sa.ForeignKeyConstraint(['pool_id'], ['Pool.id'], )
    )
    op.create_table('task_log_rule_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('log_rule_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['log_rule_id'], ['LogRule.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['Task.id'], )
    )
    op.create_table('task_workflow_association',
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['Task.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['Workflow.id'], )
    )
    op.create_table('pool_link_association',
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('link_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['link_id'], ['Link.id'], ),
    sa.ForeignKeyConstraint(['pool_id'], ['Pool.id'], )
    )
    op.create_table('task_device_association',
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('service_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['Device.id'], ),
    sa.ForeignKeyConstraint(['service_task_id'], ['ServiceTask.id'], )
    )
    op.create_table('task_pool_association',
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('service_task_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pool_id'], ['Pool.id'], ),
    sa.ForeignKeyConstraint(['service_task_id'], ['ServiceTask.id'], )
    )
    op.drop_table('apscheduler_jobs')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apscheduler_jobs',
    sa.Column('id', sa.VARCHAR(length=191), nullable=False),
    sa.Column('next_run_time', sa.FLOAT(), nullable=True),
    sa.Column('job_state', sa.BLOB(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('task_pool_association')
    op.drop_table('task_device_association')
    op.drop_table('pool_link_association')
    op.drop_table('task_workflow_association')
    op.drop_table('task_log_rule_association')
    op.drop_table('pool_device_association')
    op.drop_table('WorkflowTask')
    op.drop_table('WorkflowEdge')
    op.drop_table('ServiceTask')
    op.drop_table('Link')
    op.drop_table('Workflow')
    op.drop_table('Task')
    op.drop_table('Service')
    op.drop_table('Device')
    op.drop_table('User')
    op.drop_table('TacacsServer')
    op.drop_table('SyslogServer')
    op.drop_table('Pool')
    op.drop_table('Parameters')
    op.drop_table('OpenNmsServer')
    op.drop_table('Object')
    op.drop_table('LogRule')
    op.drop_table('Log')
    op.drop_table('Job')
    # ### end Alembic commands ###
