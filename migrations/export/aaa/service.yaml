- description: Start point of a workflow
  destinations:
  - 1
  - 6
  - 11
  devices: []
  id: 1
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  multiprocessing: false
  name: Start
  number_of_retries: 0
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Napalm_VRF_workflow: &id001 !!python/tuple
      - -200
      - 0
      Netmiko_VRF_workflow: &id002 !!python/tuple
      - -200
      - 0
      payload_transfer_workflow: &id003 !!python/tuple
      - -200
      - 0
    state:
      Napalm_VRF_workflow: *id001
      Netmiko_VRF_workflow: *id002
      payload_transfer_workflow: *id003
  sources: []
  state: Idle
  tasks: []
  time_between_retries: 10
  type: swiss_army_knife_service
  waiting_time: 0
- description: End point of a workflow
  destinations: []
  devices: []
  id: 2
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  multiprocessing: false
  name: End
  number_of_retries: 0
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Napalm_VRF_workflow: &id004 !!python/tuple
      - 200
      - 0
      Netmiko_VRF_workflow: &id005 !!python/tuple
      - 200
      - 0
      payload_transfer_workflow: &id006 !!python/tuple
      - 500
      - 0
    state:
      Napalm_VRF_workflow: *id004
      Netmiko_VRF_workflow: *id005
      payload_transfer_workflow: *id006
  sources:
  - 5
  - 10
  - 18
  state: Idle
  tasks: []
  time_between_retries: 10
  type: swiss_army_knife_service
  waiting_time: 0
- description: Configure BGP Peering with Napalm
  destinations: []
  devices:
  - 4
  id: 3
  local_as: 100
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  loopback: Lo100
  loopback_ip: 100.1.1.1
  name: napalm_configure_bgp_1
  neighbor_ip: 100.1.2.1
  number_of_retries: 0
  pools: []
  positions: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  remote_as: 200
  sources: []
  state: Idle
  tasks: []
  time_between_retries: 10
  type: configure_bgp_service
  vrf_name: configure_BGP_test
  waiting_time: 0
- content: vrf definition test
  description: Create a VRF "test" with Netmiko
  destinations:
  - 2
  devices:
  - 4
  driver: arista_eos
  enable_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  id: 4
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: netmiko_create_vrf_test
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Netmiko_VRF_workflow: &id007 !!python/tuple
      - 0
      - -150
    state:
      Netmiko_VRF_workflow: *id007
  sources:
  - 1
  state: Idle
  tasks: []
  time_between_retries: 10
  type: netmiko_configuration_service
  waiting_time: 0
- command: show vrf
  content_match: test
  content_match_regex: null
  description: Check that the vrf "test" is configured
  destinations:
  - 3
  - 8
  devices:
  - 4
  driver: arista_eos
  fast_cli: true
  id: 5
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: netmiko_check_vrf_test
  number_of_retries: 0
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Napalm_VRF_workflow: &id008 !!python/tuple
      - 0
      - -50
      Netmiko_VRF_workflow: &id009 !!python/tuple
      - 0
      - -50
    state:
      Napalm_VRF_workflow: *id008
      Netmiko_VRF_workflow: *id009
  sources:
  - 2
  - 7
  state: Idle
  tasks: []
  time_between_retries: 10
  type: netmiko_validation_service
  waiting_time: 0
- content: no vrf definition test
  description: Delete VRF "test"
  destinations:
  - 4
  devices:
  - 4
  driver: arista_eos
  enable_mode: true
  fast_cli: true
  global_delay_factor: 1.0
  id: 6
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: netmiko_delete_vrf_test
  number_of_retries: 0
  operating_system: eos
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Netmiko_VRF_workflow: &id010 !!python/tuple
      - 0
      - 50
    state:
      Netmiko_VRF_workflow: *id010
  sources:
  - 3
  state: Idle
  tasks: []
  time_between_retries: 10
  type: netmiko_configuration_service
  waiting_time: 1
- command: show vrf
  content_match: ^((?!test).)*$
  content_match_regex: true
  description: Check that the vrf "test" is NOT configured
  destinations:
  - 5
  - 10
  devices:
  - 4
  driver: arista_eos
  fast_cli: true
  id: 7
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: netmiko_check_no_vrf_test
  number_of_retries: 2
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Napalm_VRF_workflow: &id011 !!python/tuple
      - 0
      - 150
      Netmiko_VRF_workflow: &id012 !!python/tuple
      - 0
      - 150
    state:
      Napalm_VRF_workflow: *id011
      Netmiko_VRF_workflow: *id012
  sources:
  - 4
  - 9
  state: Idle
  tasks: []
  time_between_retries: 1
  type: netmiko_validation_service
  waiting_time: 0
- action: load_merge_candidate
  content: 'vrf definition test

    '
  description: Create a VRF "test" with Napalm
  destinations:
  - 7
  devices:
  - 4
  driver: eos
  id: 9
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: napalm_create_vrf_test
  number_of_retries: 0
  optional_args: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Napalm_VRF_workflow: &id013 !!python/tuple
      - 0
      - -150
    state:
      Napalm_VRF_workflow: *id013
  sources:
  - 6
  state: Idle
  tasks: []
  time_between_retries: 10
  type: napalm_configuration_service
  waiting_time: 0
- description: Rollback a configuration with Napalm eos
  destinations:
  - 9
  devices:
  - 4
  driver: eos
  id: 10
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: Napalm eos Rollback
  number_of_retries: 0
  optional_args: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      Napalm_VRF_workflow: &id014 !!python/tuple
      - 0
      - 50
    state:
      Napalm_VRF_workflow: *id014
  sources:
  - 8
  state: Idle
  tasks: []
  time_between_retries: 10
  type: napalm_rollback_service
  waiting_time: 0
- call_type: GET
  content_match: ''
  content_match_regex: null
  convert_result_to_xml: null
  description: Use GET ReST call on eNMS ReST API
  destinations:
  - 12
  - 13
  devices:
  - 4
  id: 12
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  multiprocessing: true
  name: GET_device
  number_of_retries: 0
  password: admin
  payload: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      payload_transfer_workflow: &id015 !!python/tuple
      - -50
      - 0
    state:
      payload_transfer_workflow: *id015
  sources:
  - 11
  state: Idle
  tasks: []
  time_between_retries: 10
  type: rest_call_service
  url: http://127.0.0.1:5000/rest/object/device/{{device.name}}
  username: admin
  waiting_time: 0
- content_match: ''
  content_match_regex: null
  description: 'Getter: get_facts'
  destinations:
  - 14
  devices:
  - 4
  driver: eos
  getters: !!python/object/new:sqlalchemy.ext.mutable.MutableList
    listitems:
    - get_facts
    state:
    - get_facts
  id: 13
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: get_facts
  number_of_retries: 0
  optional_args: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      payload_transfer_workflow: &id016 !!python/tuple
      - -50
      - -100
    state:
      payload_transfer_workflow: *id016
  sources:
  - 12
  state: Idle
  tasks: []
  time_between_retries: 10
  type: napalm_getters_service
  waiting_time: 0
- content_match: ''
  content_match_regex: null
  description: 'Getter: get_interfaces'
  destinations:
  - 17
  devices:
  - 4
  driver: eos
  getters: !!python/object/new:sqlalchemy.ext.mutable.MutableList
    listitems:
    - get_interfaces
    state:
    - get_interfaces
  id: 14
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: get_interfaces
  number_of_retries: 0
  optional_args: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      payload_transfer_workflow: &id017 !!python/tuple
      - 150
      - 100
    state:
      payload_transfer_workflow: *id017
  sources:
  - 13
  state: Idle
  tasks: []
  time_between_retries: 10
  type: napalm_getters_service
  waiting_time: 0
- content_match: ''
  content_match_regex: null
  description: 'Getter: get_interfaces_ip'
  destinations:
  - 15
  devices:
  - 4
  driver: eos
  getters: !!python/object/new:sqlalchemy.ext.mutable.MutableList
    listitems:
    - get_interfaces_ip
    state:
    - get_interfaces_ip
  id: 15
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: get_interfaces_ip
  number_of_retries: 0
  optional_args: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      payload_transfer_workflow: &id018 !!python/tuple
      - 150
      - -100
    state:
      payload_transfer_workflow: *id018
  sources:
  - 14
  state: Idle
  tasks: []
  time_between_retries: 10
  type: napalm_getters_service
  waiting_time: 0
- content_match: ''
  content_match_regex: null
  description: 'Getter: get_config'
  destinations:
  - 16
  devices:
  - 4
  driver: eos
  getters: !!python/object/new:sqlalchemy.ext.mutable.MutableList
    listitems:
    - get_config
    state:
    - get_config
  id: 16
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  name: get_config
  number_of_retries: 0
  optional_args: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      payload_transfer_workflow: &id019 !!python/tuple
      - 300
      - -100
    state:
      payload_transfer_workflow: *id019
  sources:
  - 15
  state: Idle
  tasks: []
  time_between_retries: 10
  type: napalm_getters_service
  waiting_time: 0
- description: Process Payload in example workflow
  destinations:
  - 18
  devices:
  - 4
  id: 17
  logs: !!python/object:sqlalchemy.ext.mutable.MutableDict {}
  multiprocessing: false
  name: process_payload1
  number_of_retries: 0
  pools: []
  positions: !!python/object/new:sqlalchemy.ext.mutable.MutableDict
    dictitems:
      payload_transfer_workflow: &id020 !!python/tuple
      - 300
      - 0
    state:
      payload_transfer_workflow: *id020
  sources:
  - 16
  - 17
  state: Idle
  tasks: []
  time_between_retries: 10
  type: swiss_army_knife_service
  waiting_time: 0
