- Extend the custom property definition for services to allow grouping such that a dropdown is displayed
with each group name, and only properties for the selected group are visible.
As we add new validation types, the custom page is getting long and confusing.
Some mechanism is needed to reduce the clutter. A secondary goal is to prevent invalid combinations
from being defined, but that's a more complex problem.
>>> Done.

- Initial Payload: now available from the UI for services and workflows.

- Substitution field now have a specific color to let you know it supports substitution.

- could you add a dialog box to select which jobs in the exported_jobs folder to import?
>>> Done.

- Service Management could benefit from having a reverse lookup field or button:
"Show me all of the workflows that this service instance participates in" ...
similar to the 'Automation' button for devices.
Ability to display the workflows for a service instance and sort by same.
>>> This is done, but not exactly like the "Automation button" for devices, because the purpose is not the same.
The automation button for devices lets you remove devices from one or more pools.
However, there is no need to remove a service instance from one or more workflow
(this is something you'd do from the workflow builder instead, where you see what the service is doing).
Instead, I'm using this "Advanced Search" filtering to implement this feature.
Just like you can filter devices and links per pool, you can now filter services per workflows (show all services that belong to one or more workflows)
and filter workflows per services (show all workflows that contain these services).

- we also probably should change the pretty name for 'arguments' and 'options' since its hard to remember what these are...  I think 'options' is getting passed to ansible as '-e extra args', so perhaps we call this "Options (passed to ansible as -e extra args)"  And I think arguments are "Arguments (Ansible command line options)"
>>> Done.

- Should we change 'Pass Device Properties' to 'Pass Device Inventory Properties (to be used in the playbook as {{name}} or {{ip_address}})'
>>> Done.

- a) provide a new checkbox option: 'include result link in summary' (we can then decide to remove the link for some reports that other teams want to see)
>>> Done.

- Advanced search improvement: you can now choose between: all properties must match / any property must match (like for pools).

- New environment variable: PLAYBOOK_PATH 
This tells eNMS where your ansible playbook are located. eNMS uses that location for the ansible service: when you
load the service creation panel for an ansible service, the "playbook path" field will automatically propose all the
YaML (both .yml and .yaml) files in that directory.
By default, if PLAYBOOK_PATH is not provided, eNMS will search in "eNMS/playbooks"

- Bug fixes.